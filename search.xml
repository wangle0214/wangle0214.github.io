<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>About Me</title>
    <url>/2020/02/01/about/</url>
    <content><![CDATA[<blockquote>
<p>A Coder, live in ZhongWei, China.</p>
</blockquote>
<p>姓名：王乐<br>现居：中卫<br>电话：158-3106-1665<br>GitHub: <a href="https://github.com/wangle0214" target="_blank" rel="noopener">wangle0214</a><br>twitter: <a href="https://twitter.com/wl_0214" target="_blank" rel="noopener">wl_0214</a><br>QQ: <a href="http://wpa.qq.com/msgrd?v=3&uin=1498043321&site=qq&menu=yes" target="_blank" rel="noopener">1498043321</a><br>微信: <a href="https://u.wechat.com/MBj81tpnZlZlC4BfR8Vmzxg" target="_blank" rel="noopener">LeWang_le</a><br>创业项目托管站点:<a href="https://wl0214.gitee.io/ycsx/" target="_blank" rel="noopener">云创数学</a></p>
<a id="more"></a>
<iframe width="900" height="500" src="https://cybermap.kaspersky.com/cn/widget/dynamic/dark" frameborder="0">
<!-- ![avatar.jpg](https://i.loli.net/2020/05/18/IZ4qVUFKHM1r6NQ.jpg) -->

<img src="https://i.loli.net/2020/05/18/IZ4qVUFKHM1r6NQ.jpg" alt="avatar" width="300" style="border-radius:50%"/>


]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>智能桌面改造</title>
    <url>/2021/02/28/%E5%B0%8F%E7%88%B1%E5%90%8C%E5%AD%A6/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直对改造桌面有想法，放寒假很闲，于是采购了一片8266正式开始改造。（练手的小玩意）<br>1.为显示器加了一圈氛围灯，改写代码可实现流光溢彩的效果。<br>2.电脑实现远程启动，小爱同学启动（局域网网卡唤醒）。</p>
<a id="more"></a>

<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//无线局域网音乐律动 远程启动电脑</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLINKER_MIOT_LIGHT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLINKER_MIOT_OUTLET</span></span><br><span class="line"><span class="comment">//#define BLINKER_ESP_SMARTCONFIG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLINKER_WITHOUT_SSL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFiUdp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;FastLED.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> auth[] = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">char</span> ssid[] = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">char</span> pswd[] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">WiFiUDP Udp;</span><br><span class="line"><span class="keyword">bool</span> oState = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> localUdpPort = <span class="number">6001</span>;     </span><br><span class="line"><span class="keyword">char</span> packetBuffer[<span class="number">256</span>]; </span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> triger_time;</span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button1</span><span class="params">(<span class="string">"ButtonKey1"</span>)</span></span>;</span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button2</span><span class="params">(<span class="string">"ButtonKey2"</span>)</span></span>;</span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button3</span><span class="params">(<span class="string">"ButtonKey3"</span>)</span></span>;</span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button4</span><span class="params">(<span class="string">"ButtonKey4"</span>)</span></span>;</span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button5</span><span class="params">(<span class="string">"ButtonKey5"</span>)</span></span>;</span><br><span class="line"><span class="function">BlinkerSlider <span class="title">Slider1</span><span class="params">(<span class="string">"SliderKey"</span>)</span></span>;</span><br><span class="line"><span class="function">BlinkerSlider <span class="title">Slider2</span><span class="params">(<span class="string">"SliderKey2"</span>)</span></span>;</span><br><span class="line"><span class="function">BlinkerRGB <span class="title">RGBWS2812</span><span class="params">(<span class="string">"RGBKey"</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> openState = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> nowState = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> freq_flash = <span class="number">15</span>;</span><br><span class="line"><span class="keyword">uint8_t</span> colorR = <span class="number">250</span>, colorG = <span class="number">0</span>, colorB = <span class="number">0</span>, colorW = <span class="number">250</span>;</span><br><span class="line"><span class="keyword">bool</span> wsState;</span><br><span class="line"><span class="keyword">uint8_t</span> wsMode = BLINKER_CMD_MIOT_DAY;</span><br><span class="line"><span class="keyword">int</span> brt_set = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_NeoPixel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PIN            5                           </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NUMPIXELS      60                         </span></span><br><span class="line"><span class="keyword">int</span> pre_si = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> drop_dot = NUMPIXELS - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> drop_time;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> lift_time;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> up_time;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> down_time;</span><br><span class="line">Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);</span><br><span class="line">CRGBArray&lt;NUMPIXELS&gt; leds;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pixelShow</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  pixels.setBrightness(colorW);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUMPIXELS; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    pixels.setPixelColor(i, colorR, colorG, colorB);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  pixels.show();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slider1_callback</span><span class="params">(<span class="keyword">int32_t</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  Blinker.vibrate();</span><br><span class="line">  BLINKER_LOG(<span class="string">"get slider value: "</span>, value);</span><br><span class="line">  freq_flash = value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slider2_callback</span><span class="params">(<span class="keyword">int32_t</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  Blinker.vibrate();</span><br><span class="line">  BLINKER_LOG(<span class="string">"get slider value: "</span>, value);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ws2812_callback</span><span class="params">(<span class="keyword">uint8_t</span> r_value, <span class="keyword">uint8_t</span> g_value, <span class="keyword">uint8_t</span> b_value, <span class="keyword">uint8_t</span> bright_value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  button_clear();</span><br><span class="line">  BLINKER_LOG(<span class="string">"R value: "</span>, r_value);</span><br><span class="line">  BLINKER_LOG(<span class="string">"G value: "</span>, g_value);</span><br><span class="line">  BLINKER_LOG(<span class="string">"B value: "</span>, b_value);</span><br><span class="line">  BLINKER_LOG(<span class="string">"Rrightness value: "</span>, bright_value);</span><br><span class="line">  colorR = r_value;</span><br><span class="line">  colorG = g_value;</span><br><span class="line">  colorB = b_value;</span><br><span class="line">  colorW = bright_value;</span><br><span class="line">  openState = <span class="number">6</span>;</span><br><span class="line">  <span class="comment">//Text1.print("灯光模式：" , "单颜色");</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">button_clear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Button1.print(<span class="string">"off"</span>);</span><br><span class="line">  Button2.print(<span class="string">"off"</span>);</span><br><span class="line">  Button3.print(<span class="string">"off"</span>);</span><br><span class="line">  Button4.print(<span class="string">"off"</span>);</span><br><span class="line">  Button5.print(<span class="string">"off"</span>);</span><br><span class="line">  Button1.color(<span class="string">"#008000"</span>);</span><br><span class="line">  Button2.color(<span class="string">"#008000"</span>);</span><br><span class="line">  Button3.color(<span class="string">"#008000"</span>);</span><br><span class="line">  Button4.color(<span class="string">"#008000"</span>);</span><br><span class="line">  Button5.color(<span class="string">"#008000"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">button1_callback</span><span class="params">(<span class="keyword">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"get button state: "</span>, state);</span><br><span class="line">  <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"日光模式开启"</span>);</span><br><span class="line">    button_clear();</span><br><span class="line">    Button1.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    Button1.print(<span class="string">"on"</span>);</span><br><span class="line">    openState = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"日光模式关闭!"</span>);</span><br><span class="line">    button_clear();</span><br><span class="line">    Button1.color(<span class="string">"#008000"</span>);</span><br><span class="line">    openState = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">button2_callback</span><span class="params">(<span class="keyword">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"get button state: "</span>, state);</span><br><span class="line">  <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"月光模式开启"</span>);</span><br><span class="line">    button_clear();</span><br><span class="line">    Button2.print(<span class="string">"on"</span>);</span><br><span class="line">    Button2.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    openState = <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"月光模式关闭!"</span>);</span><br><span class="line">    button_clear();</span><br><span class="line">    openState = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">button3_callback</span><span class="params">(<span class="keyword">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  BLINKER_LOG(<span class="string">"get button state: "</span>, state);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"温馨模式开启"</span>);</span><br><span class="line">    button_clear();</span><br><span class="line">    Button3.print(<span class="string">"on"</span>);</span><br><span class="line">    Button3.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    openState = <span class="number">3</span>;</span><br><span class="line">    brt_set = colorW;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"温馨模式关闭!"</span>);</span><br><span class="line">    button_clear();</span><br><span class="line">    openState = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">button4_callback</span><span class="params">(<span class="keyword">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  BLINKER_LOG(<span class="string">"get button state: "</span>, state);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"电脑模式开启"</span>);</span><br><span class="line"></span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">         pcawaking();</span><br><span class="line"> </span><br><span class="line">    openState = <span class="number">4</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"电脑模式关闭!"</span>);</span><br><span class="line"></span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">  openState = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">button5_callback</span><span class="params">(<span class="keyword">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  BLINKER_LOG(<span class="string">"get button state: "</span>, state);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"电视模式开启"</span>);</span><br><span class="line"></span><br><span class="line">    button_clear();</span><br><span class="line">    Button5.print(<span class="string">"on"</span>);</span><br><span class="line">    Button5.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    openState = <span class="number">5</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"电视模式关闭!"</span>);</span><br><span class="line"></span><br><span class="line">    button_clear();</span><br><span class="line">    openState = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dataRead</span><span class="params">(<span class="keyword">const</span> String &amp; data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"Blinker readString: "</span>, data);</span><br><span class="line"></span><br><span class="line">  Blinker.vibrate();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> BlinkerTime = millis();</span><br><span class="line"></span><br><span class="line">  Blinker.print(<span class="string">"millis"</span>, BlinkerTime);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">getColor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> color = colorR &lt;&lt; <span class="number">16</span> | colorG &lt;&lt; <span class="number">8</span> | colorB;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//小爱同学</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">miotPowerState</span><span class="params">(<span class="keyword">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"need set power state: "</span>, state);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line"></span><br><span class="line">    BlinkerMIOT.powerState(<span class="string">"on"</span>);</span><br><span class="line">    BlinkerMIOT.print();</span><br><span class="line">    wsState = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (colorW == <span class="number">0</span>) colorW = <span class="number">255</span>;</span><br><span class="line">    openState = <span class="number">6</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">    BlinkerMIOT.powerState(<span class="string">"off"</span>);</span><br><span class="line">    BlinkerMIOT.print();</span><br><span class="line">    wsState = <span class="literal">false</span>;</span><br><span class="line">    openState = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">miotColor</span><span class="params">(<span class="keyword">int32_t</span> color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"need set color: "</span>, color);</span><br><span class="line"></span><br><span class="line">  colorR = color &gt;&gt; <span class="number">16</span> &amp; <span class="number">0xFF</span>;</span><br><span class="line">  colorG = color &gt;&gt;  <span class="number">8</span> &amp; <span class="number">0xFF</span>;</span><br><span class="line">  colorB = color       &amp; <span class="number">0xFF</span>;</span><br><span class="line"></span><br><span class="line">  BLINKER_LOG(<span class="string">"colorR: "</span>, colorR, <span class="string">", colorG: "</span>, colorG, <span class="string">", colorB: "</span>, colorB);</span><br><span class="line">  openState = <span class="number">6</span>;</span><br><span class="line">  BlinkerMIOT.color(color);</span><br><span class="line">  BlinkerMIOT.print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">miotMode</span><span class="params">(<span class="keyword">uint8_t</span> mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"need set mode: "</span>, mode);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_DAY) &#123;</span><br><span class="line">    button_clear();</span><br><span class="line">    Button1.print(<span class="string">"on"</span>);</span><br><span class="line">    Button1.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    openState = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_NIGHT) &#123;</span><br><span class="line">    button_clear();</span><br><span class="line">    Button2.print(<span class="string">"on"</span>);</span><br><span class="line">    Button2.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    openState = <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_COLOR) &#123;</span><br><span class="line">    button_clear();</span><br><span class="line">    openState = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_WARMTH) &#123;</span><br><span class="line">    button_clear();</span><br><span class="line">    Button3.print(<span class="string">"on"</span>);</span><br><span class="line">    Button3.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    openState = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_TV) &#123;</span><br><span class="line">    button_clear();</span><br><span class="line">    Button5.print(<span class="string">"on"</span>);</span><br><span class="line">    Button5.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    openState = <span class="number">5</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_READING) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_COMPUTER) &#123;</span><br><span class="line">    pcawaking();</span><br><span class="line">    button_clear();</span><br><span class="line">    Button1.print(<span class="string">"on"</span>);</span><br><span class="line">    Button1.color(<span class="string">"#DC143C"</span>);</span><br><span class="line">    openState = <span class="number">4</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  wsMode = mode;</span><br><span class="line"></span><br><span class="line">  BlinkerMIOT.mode(mode);</span><br><span class="line">  BlinkerMIOT.print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">miotBright</span><span class="params">(<span class="keyword">const</span> String &amp; bright)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"need set brightness: "</span>, bright);</span><br><span class="line"></span><br><span class="line">  colorW = bright.toInt();</span><br><span class="line"></span><br><span class="line">  BLINKER_LOG(<span class="string">"now set brightness: "</span>, colorW);</span><br><span class="line"></span><br><span class="line">  pixelShow();</span><br><span class="line"></span><br><span class="line">  BlinkerMIOT.brightness(colorW);</span><br><span class="line">  BlinkerMIOT.print();</span><br><span class="line">  openState = <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">miotColoTemp</span><span class="params">(<span class="keyword">int32_t</span> colorTemp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"need set colorTemperature: "</span>, colorTemp);</span><br><span class="line"></span><br><span class="line">  BlinkerMIOT.colorTemp(colorTemp);</span><br><span class="line">  BlinkerMIOT.print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">miotQuery</span><span class="params">(<span class="keyword">int32_t</span> queryCode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BLINKER_LOG(<span class="string">"MIOT Query codes: "</span>, queryCode);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> (queryCode)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> BLINKER_CMD_QUERY_ALL_NUMBER :</span><br><span class="line">      BLINKER_LOG(<span class="string">"MIOT Query All"</span>);</span><br><span class="line">      BlinkerMIOT.powerState(wsState ? <span class="string">"on"</span> : <span class="string">"off"</span>);</span><br><span class="line">      BlinkerMIOT.color(<span class="number">0</span>);</span><br><span class="line">      BlinkerMIOT.mode(<span class="number">0</span>);</span><br><span class="line">      BlinkerMIOT.colorTemp(<span class="number">1000</span>);</span><br><span class="line">      BlinkerMIOT.brightness(<span class="number">1</span>);</span><br><span class="line">      BlinkerMIOT.print();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> BLINKER_CMD_QUERY_POWERSTATE_NUMBER :</span><br><span class="line">      BLINKER_LOG(<span class="string">"MIOT Query Power State"</span>);</span><br><span class="line">      BlinkerMIOT.powerState(wsState ? <span class="string">"on"</span> : <span class="string">"off"</span>);</span><br><span class="line">      BlinkerMIOT.print();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> BLINKER_CMD_QUERY_COLOR_NUMBER :</span><br><span class="line">      BLINKER_LOG(<span class="string">"MIOT Query Color"</span>);</span><br><span class="line">      BlinkerMIOT.color(<span class="number">0</span>);</span><br><span class="line">      BlinkerMIOT.print();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> BLINKER_CMD_QUERY_MODE_NUMBER :</span><br><span class="line">      BLINKER_LOG(<span class="string">"MIOT Query Mode"</span>);</span><br><span class="line">      BlinkerMIOT.mode(<span class="number">0</span>);</span><br><span class="line">      BlinkerMIOT.print();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> BLINKER_CMD_QUERY_COLORTEMP_NUMBER :</span><br><span class="line">      BLINKER_LOG(<span class="string">"MIOT Query ColorTemperature"</span>);</span><br><span class="line">      BlinkerMIOT.colorTemp(<span class="number">1000</span>);</span><br><span class="line">      BlinkerMIOT.print();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> BLINKER_CMD_QUERY_BRIGHTNESS_NUMBER :</span><br><span class="line">      BLINKER_LOG(<span class="string">"MIOT Query Brightness"</span>);</span><br><span class="line">      BlinkerMIOT.brightness(<span class="number">1</span>);</span><br><span class="line">      BlinkerMIOT.print();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span> :</span><br><span class="line">      BlinkerMIOT.powerState(wsState ? <span class="string">"on"</span> : <span class="string">"off"</span>);</span><br><span class="line">      BlinkerMIOT.color(<span class="number">0</span>);</span><br><span class="line">      BlinkerMIOT.mode(<span class="number">0</span>);</span><br><span class="line">      BlinkerMIOT.colorTemp(<span class="number">1000</span>);</span><br><span class="line">      BlinkerMIOT.brightness(<span class="number">1</span>);</span><br><span class="line">      BlinkerMIOT.print();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//	开机</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pcawaking</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> mac[<span class="number">6</span>]=&#123;<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>&#125;;  </span><br><span class="line">    <span class="keyword">char</span> pac[<span class="number">102</span>];</span><br><span class="line">    <span class="keyword">char</span> * Address = <span class="string">"192.168.0.255"</span>;</span><br><span class="line">    <span class="keyword">int</span> Port = <span class="number">3333</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      pac[i]=<span class="number">0xFF</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">6</span>;i&lt;<span class="number">102</span>;i+=<span class="number">6</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">memcpy</span>(pac+i,mac,<span class="number">6</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Udp.beginPacket(Address, Port);</span><br><span class="line">    Udp.write((byte*)pac, <span class="number">102</span>);</span><br><span class="line">    Udp.endPacket();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">active</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Blinker.run();</span><br><span class="line">  <span class="keyword">if</span> (openState != nowState)</span><br><span class="line">  &#123;</span><br><span class="line">    nowState = openState;</span><br><span class="line">    Serial.println(<span class="string">"Operating in new mode "</span> + String(openState));</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (openState == nowState)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//Serial.println("Operating in same mode " + String(openState));</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">Wheel</span><span class="params">(byte WheelPos)</span> </span>&#123;</span><br><span class="line">  WheelPos = <span class="number">255</span> - WheelPos;</span><br><span class="line">  <span class="keyword">if</span> (WheelPos &lt; <span class="number">85</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> pixels.Color(<span class="number">255</span> - WheelPos * <span class="number">3</span>, <span class="number">0</span>, WheelPos * <span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (WheelPos &lt; <span class="number">170</span>) &#123;</span><br><span class="line">    WheelPos -= <span class="number">85</span>;</span><br><span class="line">    <span class="keyword">return</span> pixels.Color(<span class="number">0</span>, WheelPos * <span class="number">3</span>, <span class="number">255</span> - WheelPos * <span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  WheelPos -= <span class="number">170</span>;</span><br><span class="line">  <span class="keyword">return</span> pixels.Color(WheelPos * <span class="number">3</span>, <span class="number">255</span> - WheelPos * <span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rainbow</span><span class="params">(<span class="keyword">uint8_t</span> wait)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">uint16_t</span> i, j;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">256</span>; j++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; pixels.numPixels(); i++) &#123;</span><br><span class="line">      pixels.setPixelColor(i, Wheel((i + j) &amp; <span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (active())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pixels.show();</span><br><span class="line">    delay(freq_flash);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">colorWipe</span><span class="params">(<span class="keyword">uint32_t</span> c, <span class="keyword">uint8_t</span> wait)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">uint16_t</span> i = <span class="number">0</span>; i &lt; pixels.numPixels(); i++) &#123;</span><br><span class="line">    pixels.setPixelColor(i, c);</span><br><span class="line">    pixels.show();</span><br><span class="line">    delay(wait);</span><br><span class="line">    <span class="keyword">if</span> (active())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fadeall</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUMPIXELS; i++) &#123;</span><br><span class="line">    leds[i].nscale8(<span class="number">250</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cylon</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">uint8_t</span> hue = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUMPIXELS; i++) &#123;</span><br><span class="line">    leds[i] = CHSV(hue++, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    FastLED.show();</span><br><span class="line">    fadeall();</span><br><span class="line">    <span class="keyword">if</span> (active())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    delay(freq_flash);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = (NUMPIXELS) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    leds[i] = CHSV(hue++, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    FastLED.show();</span><br><span class="line">    fadeall();</span><br><span class="line">    <span class="keyword">if</span> (active())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    delay(freq_flash);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//局域网</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">musicWrite2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> si;</span><br><span class="line">  <span class="keyword">int</span> delta = <span class="keyword">int</span>(<span class="number">255</span> / NUMPIXELS );</span><br><span class="line">  String tmpString;</span><br><span class="line">  <span class="keyword">int</span> packetSize = Udp.parsePacket();</span><br><span class="line">  <span class="keyword">if</span> (packetSize) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">int</span> len = Udp.read(packetBuffer, <span class="number">256</span>);</span><br><span class="line">    <span class="keyword">if</span> (len &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      packetBuffer[len] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">   si = <span class="keyword">uint8_t</span>(packetBuffer[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//si = tmpString.toInt();</span></span><br><span class="line">    Serial.println(si);</span><br><span class="line">    <span class="keyword">if</span> (si &gt; drop_dot <span class="keyword">and</span> si &lt; NUMPIXELS) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> ((si + <span class="number">3</span>) &gt;= NUMPIXELS)</span><br><span class="line">      &#123;</span><br><span class="line">        drop_dot = NUMPIXELS - <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        drop_dot = si + <span class="number">3</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">if</span> (si &gt; pre_si)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = pre_si - <span class="number">1</span>; j &lt; si + <span class="number">1</span>; j++)</span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span> ((millis() - up_time ) &lt; <span class="keyword">int</span>(<span class="number">60</span> / (si - pre_si) + <span class="number">2</span>))</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((drop_dot &gt; si + <span class="number">3</span>) &amp;&amp; (millis() - drop_time  &gt; <span class="number">15</span>))</span><br><span class="line">          &#123;</span><br><span class="line">            pixels.setPixelColor(drop_dot + <span class="number">1</span>, pixels.Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">            pixels.setPixelColor(drop_dot, pixels.Color(colorR, colorG, colorB));<span class="comment">//adjust color with APP color palette;</span></span><br><span class="line">            pixels.show();</span><br><span class="line">            drop_time = millis();</span><br><span class="line">            drop_dot--;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">int</span> j_fade = <span class="keyword">int</span>(delta * j);</span><br><span class="line">          pixels.setPixelColor(j, Wheel(j_fade &amp; <span class="number">255</span>)); <span class="comment">//fade from  BLUE-RED</span></span><br><span class="line">          pixels.show();</span><br><span class="line">        &#125;</span><br><span class="line">        up_time = millis();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">if</span> (si &lt; pre_si)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> k = pre_si + <span class="number">1</span>; k &gt; si - <span class="number">1</span>; k--)</span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span> ((millis() - down_time) &lt; <span class="keyword">int</span>(<span class="number">60</span> / (pre_si - si) + <span class="number">2</span>))</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> ((drop_dot &gt; si + <span class="number">3</span>) &amp;&amp; (millis() - drop_time &gt; <span class="number">15</span>))</span><br><span class="line">          &#123;</span><br><span class="line">            pixels.setPixelColor(drop_dot + <span class="number">1</span>, pixels.Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">            pixels.setPixelColor(drop_dot, pixels.Color(colorR, colorG, colorB));<span class="comment">//adjust color with APP color palette;</span></span><br><span class="line">            pixels.show();</span><br><span class="line">            drop_time = millis();</span><br><span class="line">            drop_dot--;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   pixels.setPixelColor(k, pixels.Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));<span class="comment">//</span></span><br><span class="line">          pixels.show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">   down_time = millis();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    pre_si = si;</span><br><span class="line">    Udp.stop();</span><br><span class="line">    Udp.begin(localUdpPort);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pride</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">uint16_t</span> sPseudotime = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">uint16_t</span> sLastMillis = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">uint16_t</span> sHue16 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint8_t</span> sat8 = beatsin88( <span class="number">87</span>, <span class="number">220</span>, <span class="number">250</span>);</span><br><span class="line">  <span class="keyword">uint8_t</span> brightdepth = beatsin88( <span class="number">341</span>, <span class="number">96</span>, <span class="number">224</span>);</span><br><span class="line">  <span class="keyword">uint16_t</span> brightnessthetainc16 = beatsin88( <span class="number">203</span>, (<span class="number">25</span> * <span class="number">256</span>), (<span class="number">40</span> * <span class="number">256</span>));</span><br><span class="line">  <span class="keyword">uint8_t</span> msmultiplier = beatsin88(<span class="number">147</span>, <span class="number">23</span>, <span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint16_t</span> hue16 = sHue16;<span class="comment">//gHue * 256;</span></span><br><span class="line">  <span class="keyword">uint16_t</span> hueinc16 = beatsin88(<span class="number">113</span>, <span class="number">1</span>, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint16_t</span> ms = millis();</span><br><span class="line">  <span class="keyword">uint16_t</span> deltams = ms - sLastMillis ;</span><br><span class="line">  sLastMillis  = ms;</span><br><span class="line">  sPseudotime += deltams * msmultiplier;</span><br><span class="line">  sHue16 += deltams * beatsin88( <span class="number">400</span>, <span class="number">5</span>, <span class="number">9</span>);</span><br><span class="line">  <span class="keyword">uint16_t</span> brightnesstheta16 = sPseudotime;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( <span class="keyword">uint16_t</span> i = <span class="number">0</span> ; i &lt; NUMPIXELS; i++) &#123;</span><br><span class="line">    hue16 += hueinc16;</span><br><span class="line">    <span class="keyword">uint8_t</span> hue8 = hue16 / <span class="number">256</span>;</span><br><span class="line"></span><br><span class="line">   brightnesstheta16  += brightnessthetainc16;</span><br><span class="line">    <span class="keyword">uint16_t</span> b16 = sin16( brightnesstheta16  ) + <span class="number">32768</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">uint16_t</span> bri16 = (<span class="keyword">uint32_t</span>)((<span class="keyword">uint32_t</span>)b16 * (<span class="keyword">uint32_t</span>)b16) / <span class="number">65536</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> bri8 = (<span class="keyword">uint32_t</span>)(((<span class="keyword">uint32_t</span>)bri16) * brightdepth) / <span class="number">65536</span>;</span><br><span class="line">    bri8 += (<span class="number">255</span> - brightdepth);</span><br><span class="line"></span><br><span class="line">   CRGB newcolor = CHSV( hue8, sat8, bri8);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">uint16_t</span> pixelnumber = i;</span><br><span class="line">    pixelnumber = (NUMPIXELS - <span class="number">1</span>) - pixelnumber;</span><br><span class="line"></span><br><span class="line">   nblend( leds[pixelnumber], newcolor, <span class="number">64</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  FastLED.show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">breath</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  wsState = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> brt = <span class="number">1</span>; brt &lt; brt_set + <span class="number">1</span>; brt++) &#123;</span><br><span class="line">    colorW = brt;</span><br><span class="line">    pixelShow();</span><br><span class="line">    <span class="keyword">if</span> (active())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    delay(freq_flash);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> brt = brt_set; brt &gt; <span class="number">0</span> ; brt--) &#123;</span><br><span class="line">    colorW = brt;</span><br><span class="line">    pixelShow();</span><br><span class="line">    <span class="keyword">if</span> (active())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    delay(freq_flash);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  BLINKER_DEBUG.stream(Serial);</span><br><span class="line">  LEDS.addLeds&lt;WS2812, PIN, RGB&gt;(leds, NUMPIXELS);</span><br><span class="line">  Blinker.begin(auth, ssid, pswd);</span><br><span class="line">  pixels.begin();</span><br><span class="line">  Udp.begin(localUdpPort);</span><br><span class="line">  Blinker.attachData(dataRead);</span><br><span class="line">  BlinkerMIOT.attachPowerState(miotPowerState);</span><br><span class="line">  BlinkerMIOT.attachColor(miotColor);</span><br><span class="line">  BlinkerMIOT.attachMode(miotMode);</span><br><span class="line">  BlinkerMIOT.attachBrightness(miotBright);</span><br><span class="line">  BlinkerMIOT.attachColorTemperature(miotColoTemp);</span><br><span class="line">  BlinkerMIOT.attachQuery(miotQuery);</span><br><span class="line">  pinMode(<span class="number">14</span>, OUTPUT);</span><br><span class="line">  digitalWrite(<span class="number">14</span>, HIGH);</span><br><span class="line">  pinMode(<span class="number">15</span>, OUTPUT);</span><br><span class="line">  digitalWrite(<span class="number">15</span>, HIGH);</span><br><span class="line">  Slider1.attach(slider1_callback);</span><br><span class="line">  Slider2.attach(slider2_callback);</span><br><span class="line">  RGBWS2812.attach(ws2812_callback);</span><br><span class="line">  Button1.attach(button1_callback);</span><br><span class="line">  Button2.attach(button2_callback);</span><br><span class="line">  Button3.attach(button3_callback);</span><br><span class="line">  Button4.attach(button4_callback);</span><br><span class="line">  Button5.attach(button5_callback);</span><br><span class="line">  pixels.setBrightness(<span class="number">250</span>);</span><br><span class="line">  button_clear();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode_1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (colorW == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    colorW = <span class="number">150</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  cylon();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode_2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  musicWrite2();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode_3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (colorW == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    colorW = <span class="number">150</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  FastLED.setBrightness(colorW);</span><br><span class="line">  pride();</span><br><span class="line">  FastLED.show();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode_4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (colorW == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    colorW = <span class="number">150</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  rainbow(freq_flash);</span><br><span class="line">  <span class="comment">//colorW = 50;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode_5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (colorW == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    colorW = <span class="number">150</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  breath();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  Blinker.run();</span><br><span class="line">  <span class="keyword">while</span> (WiFi.waitForConnectResult() != WL_CONNECTED) &#123;</span><br><span class="line">    Serial.println(<span class="string">"Connection Failed! Rebooting..."</span>);</span><br><span class="line">    delay(<span class="number">5000</span>);</span><br><span class="line">    ESP.restart();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> (openState)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">      wsState = <span class="literal">false</span>;</span><br><span class="line">      openState = <span class="number">0</span>;</span><br><span class="line">      colorR = <span class="number">255</span>;</span><br><span class="line">      colorG = <span class="number">255</span>;</span><br><span class="line">      colorB = <span class="number">255</span>;</span><br><span class="line">      colorW = <span class="number">0</span>;</span><br><span class="line">      pixelShow();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      mode_1();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      mode_2();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      mode_3();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">      mode_4();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">      mode_5();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">      pixelShow();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>ESP8266</category>
      </categories>
      <tags>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>微机原理大题</title>
    <url>/2020/06/07/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<p>内存 MEM 单元开始存放着 10 个带符号字节数据，编写完整程序求其中正数、零和负数的个<br>数，并分别将它们存于 PLUS、ZERO 和 NEGO 3 个单元。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DATA SEGMENT</span><br><span class="line">          THE DB 12h,0,22h,80h,23h,88h,67h,89h,09h,55h</span><br><span class="line">          PLUSE DB 0</span><br><span class="line">          ZERO DB 0</span><br><span class="line">          NEGO DB 0&#x2F;&#x2F;定义数据段</span><br><span class="line">CODE SEGMENT</span><br><span class="line">          ASSUME CS:CODE,DS:DATA</span><br><span class="line">          MOV AX,DATA</span><br><span class="line">          MOV DS,AX  &#x2F;&#x2F;初始化</span><br><span class="line">          MOV CX,10   &#x2F;&#x2F;计数初值</span><br><span class="line">          MOV BX,OFFSET THE  &#x2F;&#x2F;取地址</span><br><span class="line">   LP:    MOV AL,[BX]</span><br><span class="line">          CMP AL,0 &#x2F;&#x2F;判断是否为0</span><br><span class="line">          JZ QQ</span><br><span class="line">          TEST AL,80H &#x2F;&#x2F;判断是否为正 符号位与1相与</span><br><span class="line">          JZ WX</span><br><span class="line">          INC NEGO</span><br><span class="line">          JMP ZFB</span><br><span class="line">   QQ:    INC ZERO</span><br><span class="line">          JMP ZFB</span><br><span class="line">   WX:    INC PLUS</span><br><span class="line">   ZFB：  INC BX &#x2F;&#x2F;数据移动</span><br><span class="line">          LOOP LP</span><br><span class="line">          MOV AH,4CH</span><br><span class="line">          INT 21H</span><br><span class="line">          CODE ENDS</span><br><span class="line">          END LP</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>微机原理</tag>
        <tag>大题</tag>
      </tags>
  </entry>
  <entry>
    <title>微机原理常用指令</title>
    <url>/2020/06/07/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<p>一、数据传送<br>1、MOV</p>
<p>描述：赋值指令<br>格式：MOV    DST,SRC<br>功能： DST &lt;= SRC<br>注意：①不能DST,SRC都是存储器，这也是所有双操作数指令的通用要求。<br> ② 但其中一个是段寄存器时，另一个操作数必须是数据寄存器。<br>③不允许往CS传递数据<br>④将立即数送存储时，要指定操作数类型。BYTE PTR ,WORD PTR, DWORD PTR<br>⑤不影响PSW</p>
<a id="more"></a>
<p>2、PUSH</p>
<p>描述：入栈指令<br>格式：PUSH SRC<br>功能：将SRC入栈<br>注意：①只能是对“字”操作。<br>3、POP</p>
<p>描述：出栈指令<br>格式：POP DST<br>功能：将栈顶元素出栈赋值给DST<br>4、XCHG</p>
<p>描述：数据交换指令<br>格式：SCHG DST,SRC<br>功能：将DST.SRC的值进行交换<br>注意：①不能DST,SRC都是存储器，这也是所有双操作数指令的通用要求。<br>5、IN</p>
<p>格式：IN DST,SRC<br>功能：从SRC端口读取一个字节/字到DST中。<br>6、OUT</p>
<p>格式：OUT  DST,SRC<br>功能：将SRC中的数据送到DST短空中<br>7、XLAT</p>
<p>描述：取表指令<br>格式：XLAT<br>功能：以DS:[BX+AL]为地址提取一个字节的数据送到AL中<br>8、LEA</p>
<p>格式：LEA    REG,MEM<br>功能：取MEM的偏移地址送到REG中。<br>9、LDS<br>格式：LDS reg,mem<br>功能：是把mem指向的地址,高位存放在DS中,低位存放在reg中。<br>10、LES<br>格式：LES reg,mem<br>功能：是把mem指向的地址,高位存放在ES中,低位存放在reg中。<br>11、PUSHF    </p>
<p>格式：PUSHF<br>功能：将PSW进栈<br>12、POPF       </p>
<p>格式：POPF<br>功能：将栈顶元素送到PSW<br>13、LAHF         </p>
<p>格式：LAHF<br>功能：将PSW的低八位送到AH中<br>14、SAHF        </p>
<p>格式：SAHF<br>功能：将AH写入PSW的低八位<br>二、算术<br>1、ADD</p>
<p>描述：加法指令<br>格式：ADD    DST,SRC<br>功能： DST &lt;= DST+REC<br>2、ADC</p>
<p>格式：ADC    DST,SRC<br>功能：DST &lt;= DST + REC + CF<br>3、INC</p>
<p>格式： INC DST<br>功能：DST &lt;= DST + 1<br>4、SUB</p>
<p>格式：SUB    DSTSRC<br>功能： DST &lt;= DST - SRC<br>5、SBB</p>
<p>格式：SBB    DST,SRC<br>功能：DST &lt;= DST - SRC - CF<br>6、DEC</p>
<p>格式： DEC DST<br>功能：DST &lt;= DST - 1<br>7、NEG    </p>
<p>格式：NEG REG<br>功能：求补，即REG中的各位取反，然后 + 1。<br>8、CMP</p>
<p>格式：CMP    DST,SRC<br>功能：DST - REG 结果不保存，但是状态保存在PSW中。<br>9、MUL</p>
<p>描述：无符号数乘法<br>格式：MUL  SRC<br>功能：①字节操作：(AX) &lt;=(AL) * (SRC)<br>                 ②字操作：   (DX,AX) &lt;= (AX) *(SRC)<br>③双字操作：(EDX,EAX) &lt;= (EAX) *(SRC)</p>
<p>10、IMUL</p>
<p>描述：有符号数乘法<br>格式：IMUL   SRC<br>功能：DST &lt;= DST * SRC<br>11、DIV</p>
<p>描述：无符号数除法<br>格式：DIV    SRC<br>功能：①字节操作：(AH) &lt;= (AX)/(SRC)的余数;(AL) &lt;= (AX)/(SRC)的商<br>                 ②字操作：(DX) &lt;= (DX,AX)/(SRC)的余数;(AX) &lt;= (DX,AX)/(SRC)的商<br> ③双字操作：(EDX) &lt;= (EDX,EAX)/(SRC)的余数;(EAX) &lt;= (EDX,EAX)/(SRC)的商</p>
<p>12、IDIV</p>
<p>描述：有符号数除法<br>格式：IDIV    SRC<br>功能：①字节操作：(AH) &lt;= (AX)/(SRC)的余数;(AL) &lt;= (AX)/(SRC)的商<br>                 ②字操作：(DX) &lt;= (DX,AX)/(SRC)的余数;(AX) &lt;= (DX,AX)/(SRC)的商<br> ③双字操作：(EDX) &lt;= (EDX,EAX)/(SRC)的余数;(EAX) &lt;= (EDX,EAX)/(SRC)的商</p>
<p>13、CBW</p>
<p>格式：CBW<br>功能：将AL保持原值（有符号数）扩展到AX。<br>注意：此时是将AL的值看为有符号数，根据AL的最高位（符号位）来决定AH是00H还是FFH<br>14、CWD</p>
<p>格式：CWD<br>功能：将AX保持原值（有符号数）扩展到DX,AX。<br>注意：此时是将AX的值看为有符号数，根据AX的最高位（符号位）来决定DX是0000H还是FFFFH</p>
<p>三、逻辑<br>1、AND</p>
<p>描述：“与”逻辑运算<br>格式：    AND    DST,SRC<br>功能：   DST &lt;= DST AND SRC  将DST和REG对应各位进行“与”运算后结果保留于DST<br>2、OR</p>
<p>描述：“或”逻辑运算<br>格式：    OR   DST,SRC<br>功能：   DST &lt;= DST OR SRC   将DST和REG对应各位进行“或”运算后结果保留于DST<br>3、NOT</p>
<p>描述：“非”逻辑运算<br>格式：  NOT    DST<br>功能：   DST &lt;= NOT DST    将DST各位”取反”结果保留于DST<br>4、XOR</p>
<p>描述：“异或”逻辑运算<br>格式：    XOR    DST,SRC<br>功能：   DST &lt;= DST XOR SRC    将DST和SRC对应各位进行“异或”运算后结果保留于DST<br>5、TEST</p>
<p>描述：“与”逻辑运算，当只影响PSW，不保留运算结果。<br>格式：    TEST    DST,SRC<br>功能：   DST AND SRC   将DST和SRC对应各位进行“与”运算，结果状态影响PSW，但不该表DST,SRC的值。<br>6、SHL</p>
<p>描述：逻辑左移<br>格式：SHL   DST，1/CL<br>功能：将DST顺序左移1位或CL寄存器中指定的位数。左移一位时，DST的最高位移入进位标志位CF，最低位补零。<br>7、SAL</p>
<p>描述：算术左移<br>格式：SAL   SRC，1/CL<br>功能：将SRC顺序左移1位或CL寄存器中指定的位数。左移一位时，SRC的最高位移入进位标志位CF，最低位补零。<br>8、SHR</p>
<p>描述：逻辑右移<br>格式：SHR  SRC，1/CL<br>功能：将SRC顺序右移1位或CL寄存器指定的位数。逻辑右移1位时，SRC的最低位移到进位标志位CF,最高位补零。<br>9、SAR</p>
<p>描述：算术右移<br>格式：SAR   SRC，1/CL<br>功能：将SRC顺序右移1位或CL寄存器指定的位数。逻辑右移1位时，SRC的最低位移到进位标志位CF,最高位用原先最高位的值填充。<br>10、ROL</p>
<p>描述：循环左移<br>格式：ROL    SRC,1/CL<br>功能：将SRC顺序左移1位或CL寄存器指定的位数。循环左移1位时，SRC的最高位移到最低位，并且最高位同时移入标志位CF。<br>11、ROR</p>
<p>描述：循环右移<br>格式：ROR    SRC,1/CL<br>功能：将SRC顺序右移1位或CL寄存器指定的位数。循环左移1位时，SRC的最低位移到最高位，并且最低位同时移入标志位CF。<br>12、RCL</p>
<p>描述：带进位循环左移<br>格式：RCL    SRC,1/CL<br>功能：将SRC顺序左移1位或CL寄存器指定的位数。带进位循环左移1位时，原先状态位CF的值移入SRC的最低位，SRC的最高位移入状态位CF。<br>13、RCR</p>
<p>描述：带进位循环右移<br>格式：RCR    SRC,1/CL<br>功能：将SRC顺序右移1位或CL寄存器指定的位数。带进位循环右移1位时，原先状态位CF的值移入SRC的最高位，SRC的最低位移入状态位CF。<br>四、串指令<br>当方向标志位DF = 0时，DI,SI+；当DF = 1时，DI,SI-。</p>
<p>ES：DI    DS:SI</p>
<p>1、MOVS          </p>
<p>格式：①MOVS    DST,SRC     ②MOVSB（字节）     ③MOVSW（字）     ④MOVSD（双字）<br>功能：   ①字节操作： [ES:DI]&lt;=[DS:SI]  ,SI&lt;=SI +/- 1<br>                    ②字操作：     [ES:DI]&lt;=[DS:SI]]  ,SI &lt;= SI +/- 2<br>                    ③双字操作：  [ES:DI]&lt;=[DS:SI] ,SI &lt;= SI +/- 4</p>
<p>2、CMPS</p>
<p>格式：①CMPSB（字节）    ②CMPSW（字）     ③CMPSD（双字）<br>功能：  ①字节操作：  [DS:SI] - [ES:DI]  ,SI&lt;=SI +/- 1<br>                    ②字操作：     [DS:SI] - [ES:DI]  ,SI &lt;= SI +/- 2<br>③双字操作：  [DS:SI] - [ES:DI] ,SI &lt;= SI +/- 4</p>
<p>3、LODS</p>
<p>格式：①LODSW（字）     ③LODSD（双字）<br>功能： ①字节操作：AL &lt;= [DS:SI]  ,SI&lt;=SI +/- 1<br>                  ②字操作：    AX  &lt;= [DS:SI]  ,SI &lt;= SI +/- 2<br>③双字操作：   EAX  &lt;= [DS:SI]  ,SI &lt;= SI +/- 4</p>
<p>4、STOS</p>
<p>格式：①STOSB（字节）     ②STOSW（字）     ③STOSD（双字）<br>功能： ①字节操作：[DS:SI] &lt;= AL   ,SI&lt;=SI +/- 1<br>                  ②字操作：    [DS:SI] &lt;= AX  ,SI &lt;= SI +/- 2<br> ③双字操作：  [DS:SI] &lt;= EAX   ,SI &lt;= SI +/- 4</p>
<p>5、SCAS</p>
<p>格式：①SCASB（字节）     ②SCASW（字）     ③SCASD（双字）<br>功能： ①字节操作： AL - [DS:SI]    ,SI&lt;=SI +/- 1<br>                  ②字操作：     AX - [DS:SI]    ,SI &lt;= SI +/- 2<br> ③双字操作：   EAX - [DS:SI]     ,SI &lt;= SI +/- 4</p>
<p>6、REP</p>
<p>格式：REP   string primitive(MOVS,LODS,STOS,INS和OUTS）<br>功能：①如果CX = 0退出，否则继续运行以下操作<br>                 ②CX &lt;= CX - 1<br>③执行以后串操作<br> ④重复 ①~③</p>
<p>7、REPE/REPZ</p>
<p>格式：REPE/REPZ   string primitive(CMPS或SCAS）<br>功能：①如果CX = 0 或 ZF = 0 退出，否则继续运行以下操作<br>                 ②CX &lt;= CX - 1<br>③执行以后串操作<br> ④重复 ①~③</p>
<p>8、REPNE/REPNZ</p>
<p>格式：REPNE/REPNZ   string primitive(CMPS或SCAS）<br>功能：①如果CX = 0 或 ZF = 1 退出，否则继续运行以下操作<br>                 ②CX &lt;= CX - 1<br> ③执行以后串操作<br>④重复 ①~③</p>
<p>五、无条件转移<br>1、JMP</p>
<p>格式：JMP ADDRESS<br>功能： 无条件跳转到 ADDRESS<br>六、条件转移<br>1、根据PSW<br>1、JZ</p>
<p>格式：JZ    EX<br>功能：当ZF = 1时，跳转到EX<br>2、JNZ</p>
<p>格式：JNZ    EX<br>功能：当ZF = 0时，跳转到EX<br>3、JC</p>
<p>格式：JC    EX<br>功能：当CF = 1时，跳转到EX<br>4、JNC</p>
<p>格式：JNC    EX<br>功能：当CF = 0时，跳转到EX<br>5、JO</p>
<p>格式：JO    EX<br>功能：当OF = 1时，跳转到EX<br>6、JNO</p>
<p>格式：JNO    EX<br>功能：当OF = 0时，跳转到EX<br>7、JS</p>
<p>格式：JS    EX<br>功能：当SF = 1时，跳转到EX<br>8、JNS</p>
<p>格式：JNS    EX<br>功能：当SF = 0时，跳转到EX<br>2、比较两个无符号数后</p>
<h1 id="N-：不等于-A：大于-B-：-小于-E-：等于"><a href="#N-：不等于-A：大于-B-：-小于-E-：等于" class="headerlink" title="N ：不等于    A：大于    B ： 小于    E ：等于"></a>N ：不等于    A：大于    B ： 小于    E ：等于</h1><p>3、比较两个有符号数后</p>
<h1 id="N-：不等于-G：大于-L-：-小于-E-：等于"><a href="#N-：不等于-G：大于-L-：-小于-E-：等于" class="headerlink" title="N ：不等于    G：大于    L ： 小于    E ：等于"></a>N ：不等于    G：大于    L ： 小于    E ：等于</h1><p>4、JCXZ<br>格式： JCXZ EX<br>功能：若 CX = 0，则跳转到EX<br>七、循环<br>LOOP<br>LOOPE/LOOPZ<br>LOOPNE/LOOPNZ<br>八、子程序<br>1、CALL</p>
<p>格式：①CALL EX/NEAR    PTR    EX<br>                 ②CALL   FAR    PTR    EX </p>
<p>功能：①将IP进栈；将子程序的入口地址的位移量 =&gt;IP<br>                 ②将CS入栈；将IP入栈；将子程序入口地址偏移量 =&gt;IP；将子程序的段地址 =&gt;CS<br>2、RET</p>
<p>格式：RET (num)<br>功能：①将栈顶元素出栈 =&gt; IP<br>                 ②将SP向高地址移动num位。<br>3、RETF</p>
<p>格式：RETF (num)<br>功能：①将栈顶元素出栈 =&gt; IP<br>                 ②将栈顶元素出栈 =&gt;CS<br>③将SP向高地址移动num位。</p>
<p>九、中断<br>INT XX<br>IRET<br>十、空操作<br>NOP<br>十一、标志<br>1、CLC</p>
<p>格式：CLC<br>功能：令CF=0<br>2、STC    </p>
<p>格式：STC<br>功能：令CF=1<br>3、CMC </p>
<p>格式：CMC<br>功能：令CF取反。<br>4、CLD  </p>
<p>格式：CLD<br>功能：令DF = 0<br>5、STD  </p>
<p>格式：STD<br>功能：令DF = 1<br>6、CLI    </p>
<p>格式：CLI<br>功能：禁止发生中断<br>7、STI </p>
<p>格式：STI<br>功能： 允许发生中断</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>微机原理</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>微机原理简答题</title>
    <url>/2020/06/07/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E7%AE%80%E7%AD%94%E9%A2%98/</url>
    <content><![CDATA[<p>什么是中断响应？外设向 CPU 申请中断，但 CPU 不给予响应，其原因有哪些？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">中断响应是当 CPU 接收到中断请求时，暂停当前程序的运行，保存断点地址，找到中断服务程序 的入口地址，</span><br><span class="line">准备执行中断服务程序。</span><br><span class="line">(1)CPU 处于关中断状态，IF=O；</span><br><span class="line">(2)该中断请求已被屏蔽；</span><br><span class="line">(3)该中断请求的时间太短，未能保持到指令周期结束；</span><br><span class="line">(4)CPU 已释放总线(即已响应了 DMA 请求)，而未收回总线控制权。</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>说明 8253 各个计数通道中三个引脚信号 CLK，OUT 和 GATE 的功能。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">每个通道都有三根引脚线与外界联系。CLK 为外部输入计数脉冲。</span><br><span class="line">引脚 GATE 为控制计数器工作的门控输入信号，根据工作方式的不同分为高电平触发计数和正脉 冲触发计数。</span><br><span class="line">引脚 OUT 为定时时间到/计数结束输出信号，在不同的工作方式下，可以输出不同形式的波型</span><br></pre></td></tr></table></figure>

<p>CPU 内部由哪两部分功能部件构成？简述各自功能及其配合关系。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">由 EU 和 BIU 组成。</span><br><span class="line">EU 是执行部件，主要的功能是执行指令。BIU 是总线接口部件，与片外存储器及 I/O 接口电路 传输数据。</span><br><span class="line">EU 经过 BIU 进行片外数据的访问，BIU 为 EU 提供将要执行的指令。</span><br><span class="line">EU 与 BIU 可分别独立工 作，当 EU 不需访问外部时，即不需要 BIU 提供服务时，BIU 可进行填充指令队列的操作</span><br></pre></td></tr></table></figure>
<p>8086CPU 中有哪些寄存器？各有什么用途？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">指令执行部件（ EU）设有 8 个 16 位通用寄存器 AX、BX、CX、DX、SP、BP、SI、DI， 主要用途是保存数据和地</span><br><span class="line">址（包括内存地址和 I/O 端口地址）。其中 AX、BX、CX、DX 主 要用于保存数据， BX可用于保存地址，DX还用</span><br><span class="line">于保存 I/O 端口地址； BP、SI、DI 主要用 于保存地址； SP用于保存堆栈指针。</span><br><span class="line">标志寄存器 FR 用于存放运算结果特征和控制 CPU操作。</span><br><span class="line">BIU 中的段寄存器包括 CS、DS、ES、SS，主要用途是保存段地址，其中 CS 代码段寄存器 中存放程序代码段起始地</span><br><span class="line">址的高 16 位，DS 数据段寄存器中存放数据段起始地址的高 16 位， SS堆栈段寄存器中存放堆栈段起始地址的高 </span><br><span class="line">16 位， ES扩展段寄存器中存放扩展数据段起 始地址的高 16 位。</span><br><span class="line">指令指针寄存器 IP 始终存有相对于当前指令段起点偏移量的下一条指令， 即 IP 总是指向下 一条待执行的指令。</span><br></pre></td></tr></table></figure>
<p>简述 8086 系统中物理地址的形成过程。 8086 系统中的物理地址最多有多少个？逻辑地址呢？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">8086 系统中的物理地址是由 20 根地址总线形成的。 8086 系统采用分段并附以地址偏 移量办法形成 20 位的物理</span><br><span class="line">地址。采用分段结构的存储器中，任何一个逻辑地址都由段基址 和偏移地址两部分构成，都是 16 位二进制数。通过</span><br><span class="line">一个 20 位的地址加法器将这两个地址相加形成物理地址。具体做法是 16 位的段基址左移 4 位(相当于在段基址最</span><br><span class="line">低位后添 4 个 “ 0”) ，然后与偏移地址相加获得物理地址。</span><br><span class="line">由于 8086CPU 的地址线是 20 根，所以可寻址的存储空间为 1M 字节，即 8086 系统的物理 地址空间是 1MB。</span><br><span class="line">逻辑地址由段基址和偏移地址两部分构成， 都是无符号的 16 位二进制数， 程序设计时采用逻辑地址，也是 1MB。</span><br></pre></td></tr></table></figure>



<p>8086 系统中的存储器为什么要采用分段结构？有什么好处？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">8086CPU 中的寄存器都是 16 位的， 16 位的地址只能访问 64KB 的内存。 086 系统中的 物理地址是由 20 根地</span><br><span class="line">址总线形成的，要做到对 20 位地址空间进行访问，就需要两部分地 址，在 8086 系统中，就是由段基址和偏移地</span><br><span class="line">址两部分构成。这两个地址都是 16 位的，将 这两个地址采用相加的方式组成 20 位地址去访问存储器。</span><br><span class="line">在 8086 系统的地址形成中，当段地址确定后，该段的寻址范围就已经确定，其容量不大于 64KB。同时，通过修改</span><br><span class="line">段寄存器内容，可达到逻辑段在整个 1MB 存储空间中浮动。各个逻 辑段之间可以紧密相连，可以中间有间隔，也可</span><br><span class="line">以相互重叠（部分重叠，甚至完全重叠）。 采用段基址和偏移地址方式组成物理地址的优点是：满足对 8086 系统</span><br><span class="line">的 1MB 存储空间的 访问，同时在大部分指令中只要提供 16 位的偏移地址即可。</span><br></pre></td></tr></table></figure>
<p>在某系统中，已知当前（ SS）＝2360H ，（ SP）＝ 0800H ，那么该堆栈段在存储器中的 物理地址范围是什么？若往堆栈中存入 20 个字节数据，那么 SP的内容为什么值？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">（ SS）×10H＋（ SP）＝ 23600H ＋0800H ＝23E00H ，堆栈段在存储器中的物理地址范 围是 23600H ～23E00H</span><br><span class="line">若往堆栈中存入 20 个字节数据，那么 SP 的内容为 0800H －14H ＝07ECH。</span><br></pre></td></tr></table></figure>
<p>8086 系统中为什么一定要有地址锁存器？需要锁存哪些信息？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">由于 8086CPU 受芯片封装的限制，只有 40 个管脚，所以地址线和数据线只能采用复 用的方式共同使用某些管脚。</span><br><span class="line"> 对存储器进行访问时， 在读取数据或写入数据时， 存储器芯片 要求在这个过程中地址信息必须稳定提供给存储器，</span><br><span class="line"> 而由于 8086CPU 地址线和数据线是复 用的， 就不可能在同一时刻具有地址和数据的两种功能。 这就需要在 CPU</span><br><span class="line">  提供地址信息时， 将地址锁存起来， 以保证下一个时刻当这些复用的管脚起着数据线的功能时， 存储器有正确</span><br><span class="line">  的地址信息。要锁存的信息包括这些复用管脚的地址和 BHE 等信号。</span><br></pre></td></tr></table></figure>


<p>8086 读/写总线周期各包括最少几个时钟周期？什么情况下需要插入等待周期 TW？插 入多少个 TW 取决于什么因素？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">8086 读/写总线周期各包括最少四个时钟周期。 在系统中增加等待周期 TW 的一般情况 是：当 CPU 提供了地址后，</span><br><span class="line">由于外设或存储器的读出或写入时间较慢，不能与 CPU 的速度 匹配，就需要插入等待周期 TW，等待 CPU能从外设</span><br><span class="line">或存储器将数据正确地读出或写入为止。 显然，插入的等待周期 TW 的个数取决于外设或存储器的取出或写入时间。</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>简答题</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>微机原理</tag>
        <tag>简答题</tag>
      </tags>
  </entry>
  <entry>
    <title>微机原理8253芯片</title>
    <url>/2020/06/07/8253/</url>
    <content><![CDATA[<p>一、工作方式<br>1、方式0——计数结束后输出由低变高<br>（1）工作过程<br>当写入方式0控制字后，计数器输出段OUT立即变成低电平。当写入计数初值N后，若GATE为高电平，计数器开始计数。</p>
<p>在计数过程中，OUT端一直维持为低，直到计数为0（计数）时，OUT端变为高，此时可以设置为向CPU发出中断请求。</p>
<p>在计数过程中，若GATE变为低电平，暂时停止计数，OUT不变，直到GATE变为高电平后继续接着计数，到计数为0（结束）时，呕吐端变为高，此时可以设置为向CPU发出中断请求。</p>
<p>8253用作计数器时，一般都工作在方式0。</p>
<a id="more"></a>
<p>（2）特点<br>计数器只计一遍数。当计数到0时，并不回复计数初值，不开始重新计数，输出段OUT由低变高且一直保持为高。只有当写入一个新的计数初值后，OUT才变低，开始新的计数。<br>在计数过程中可改变计数值。如果计数器为8位，在写入新的8位计数值后，计数器将按新的计数值重新开始计数。如果计数器为16位，在写入第一个字节后，计数器停止计数，在写入第二个字节后，计数器按照新的数值开始计数。<br>在计数过程中，可由门控信号GATE暂停。当GATE=0时，计数器暂停计数；当GATE变为1后，就接着计数。<br>方式0的OUT信号在计数到0时由低变高，可作为中断请求信号。但由于8253内部没有中断控制电路，通常接8259中断控制器。<br>2、方式1——可程控的单脉冲<br>（1）工作过程<br>写入控制字后，OUT输出高电平，此时并不开始计数。写入计数初值后，当门控制信号GATE变为高电平时（边沿触发！），启动计数，OUT输出变低。在整个计数过程中，OUT都维持低，直到计数到0时，输出变为高。因此，输出为一单脉冲，其低电平维持时间由装入的计数初值来决定。</p>
<p>（2）特点<br>当计数到0后，计数器可再次由外部启动（GATE信号跳变依次），按原计数初值重新开始计数，输出单脉冲，二不需要再次送一个计数初值。</p>
<p>在计数过程中，外部可发出门控脉冲，进行再触发。这时不管原来计数到何值，计数器将重新开始计数，输出端仍保持低电平。</p>
<p>计数过程中改变计数初值不影响本次计数过程。若门控信号再次被触发，则计数器才按新的计数值计算。</p>
<p>方式0    方式1<br>设置计数初值后立即计数。    设置计数初值后不立即计数，直到有外部触发信号后才开始计数。<br>在计数过程中能用门控信号暂停计数    在计数过程中若有门控脉冲时不停止计数，而是使计数过程重新开始。<br>在计数过程中改变计数初值时，原计数停止，立即按新的初值开始计数。    在计数过程中当改变计数初值时，现行计数不受影响，新计数初值在下次启动计数后才起作用。<br>在一次计数结束后，必须重新设置设置计数初值才能再次计数，即计数初值只能使用一次。    计数初值在一次计数过程完成后继续有效。<br>3、方式2——分频器<br>（1）工作过程<br>写入控制字后，计数器输出端为高电平。写入计数初值后，只要GATE为高电平（电平触发！）计数器立即对CLK端的输入脉冲计数。</p>
<p>在计数过程中输出端始终保持为高，直到计数器减为1，输出变低。经过一个CLK周期，输出回复为高，同时按照原计数初值重新开始计数。如果计数初值为N，则在每输入N个脉冲后，输出一个脉冲。因此，这种方式可以作为分频器或用于产生实时时钟中断。</p>
<p>（2）特点<br>不用重新设置计数初值，计数到0后自动装入初值，计数器能够连续工作，输出固定频率的脉冲。</p>
<p>计数过程可由门控信号GATE控制。当GATE为0时，暂停计数。当GATE变为1后，下一个CLK脉冲使计数器回复初值，重新开始计数。</p>
<p>在计数过程中可以改变计数初值，这对正在进行的计数过程没有影响。但当计数到1时输出变低，过一个CLK周期输出又变高，计数器将按新的计数值计数。所以对方式2改变计数初值时，在下一次计数有效。</p>
<p>4、方式3——方波发生器<br>（1）工作过程<br>写入控制字后，输出为高电平。GATE为高电平时（电平触发！），在写入计数初值后就开始计数，输出保持为高。当计数到一半计数初值时，输出变为低，直到计数为0，输出又变为高，重新开始计数。</p>
<p>（2）特点<br>当计数初值N为偶数时，输出端的高低电平持续时间相等，各为N/2个CLK脉冲周期；当计数初值N为奇数时，输出端的高电平持续时间比低电平持续时间多一个脉冲周期。即高电平持续(N+1)/2个脉冲周期，低电平持续(N-1)/2个脉冲周期。</p>
<p>当GATE为1时，允许计数；当GATE=0时，停止计数。如果在OUT为低电平期间GATE=0，OUT将立即变高。当GATE变高以后，在下一个CLK脉冲来到时，计数器将重新装入初始值，开始计数。在这种情况下通过门控信号使计数器实现同步，称为硬件同步。</p>
<p>如果GATE信号一直为高电平，在写入控制字和计数值后，将在下一个CLK脉冲来到时装入计数初值，这种情况称为软件同步。</p>
<p>在计数期间写入一个新的计数初值，如果在输出信号半周期结束之前没有收到GATE脉冲，则要在现行输出半周期结束后才按新的计数初值开始计数。</p>
<p>在写入新计数初值之后在现行输出半周期结束之前GAET=0，OUT立即变为高，计数器停止工作，当GATE=1后，将在下一个CLK脉冲来到时立即装入新的计数初值并开始计数。</p>
<p>5、方式4——软件触发的选通信号发生器<br>（1）工作过程<br>写入控制字后，输出端OUT变成高电平，以此作为初始电平。</p>
<p>当写入计数初值后开始计数，称为软件触发（前提条件是GATE为高电平）。</p>
<p>当计数到0后，输出变低，经过一个CLK周期，输出又变高，计数器停止计数。这种方式计数也是一次性的，只有在输入新的计数值后，才开始新的计数过程。若设置的计数初值为N，则是在写入了计数初值后经过N个CLK脉冲，才输出一个负脉冲。一般将此负脉冲作为选通信号。</p>
<p>（2）特点<br>当GATE=1时，允许计数；当GATE=0时，禁止计数。所以，要做到软件触发，GATE应保持为1。</p>
<p>在计数过程中，若改变计数初值，则在本次计数结束，下一周期开始按新的计数初值开始计数。这称为软件再触发。16位数，在设置第一个字节后停止计数，在设置第二个字节后开始计数。</p>
<p>6、方式5——硬件触发的选通信号发生器<br>（1）工作过程<br>写入控制字后，输出端出现高电平，写入计数初值后，计数器并不立即开始计数，而是要由门控脉冲的上升沿来启动计数，称为硬件触发。当计数到0时，输出变低，又经过一个CLK周期，输出恢复为高电平。这样在输出端得到一个负脉冲选通信号。计数器停止计数后要等到下次门控脉冲触发，才能再惊喜计数。</p>
<p>（2）特点<br>若设置计数初值为N，则在门控脉冲触发后，进过N个CLK脉冲，才输出一个负脉冲。</p>
<p>在计数过程中，若GATE端又出现一个脉冲进行触发，则使计数器重新开始计数，但对输出状态没有影响。</p>
<p>如果在计数过程中改变计数值，只要没有门控信号的触发，就不影响本次计数过程。当计数到0后，若右有新的门控信号的触发，则按新的计数初值计数。</p>
<p>方式4    方式5<br>每次要靠软件设置计数初值后才能计数（软件触发）。<br>计数初值只需设置一次，但是每次计数要靠门控信号的触发（硬件触发）。<br>软件更改计数初值后立即起作用。<br>软件更改计数初值后要有新的门控信号的触发才能起作用。</p>
]]></content>
      <categories>
        <category>8253</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>微机原理</tag>
        <tag>芯片</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo + Github的方式免费搭建自己的个人博客</title>
    <url>/2020/05/17/%E4%BD%BF%E7%94%A8Hexo%20+%20Github%E7%9A%84%E6%96%B9%E5%BC%8F%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>博客有第三方平台，也可以自建，比较早的有博客园、CSDN，近几年新兴的也比较多诸如：WordPress、segmentFault、简书、掘金、知乎专栏、Github Page 等等。</p>
<p>这次我要说的就是 Github Page + Hexo 搭建个人博客的方式！Github Page 是 Github 提供的一种免费的静态网页托管服务（所以想想免费的空间不用也挺浪费的哈哈哈），可以用来托管博客、项目官网等静态网页。支持 Jekyll、Hugo、Hexo 编译静态资源。</p>
<a id="more"></a>

<h1 id="一-环境"><a href="#一-环境" class="headerlink" title="一.环境"></a>一.环境</h1><p><strong>准备环境</strong><br>首先，安装 NodeJS，因为 Hexo 是基于 Node.js 驱动的一款博客框架，相比起前面提到过的 Jekyll 框架更快更简洁，因为天*朝网络被墙的原因尝试过安装 Jekyll 失败而放弃了。<br>然后，安装 git，一个分布式版本控制系统，用于项目的版本控制管理，作者是 Linux 之父。如果 Git 还不熟悉可以参考廖雪峰大神的 Git 教程。</p>
<p>两个工具不同的平台安装方法有所不一样，可自行了解按步骤安装，这里不详述了。安装成功后打开git bash（Windowns）或者终端（Mac），下方中将统一称为命令行。<br>在命令行中输入相应命令验证是否成功，如果成功会有相应的版本号。</p>
<p>git version<br>node -v<br>npm -v<br>image</p>
<hr>
<h2 id="二-搭建"><a href="#二-搭建" class="headerlink" title="二.搭建"></a>二.搭建</h2><p>新建一个以你的github用户名为名字的仓库，等会把Hexo博客部署到github上之后就可以通过你的用户名.github.io访问你的个人博客啦</p>
<p><img src="https://img-blog.csdnimg.cn/20200517181527877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdsZV8wMg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>打开git bash输入命令npm install -g hexo 安装Hexo</p>
<p><img src="https://img-blog.csdnimg.cn/20200517181537217.png" alt="在这里插入图片描述"></p>
<p>新建文件夹myHexo(名字任取，用来放Hexo博客相关文件)，并进入myHexo，输入命令hexo init，初始化成功后看到提示start blogging with hexo即成功，hexo会自动下载一些文件到这个目录，包括node_modules.(后续哪一步出错可以直接删掉myHexo文件夹再一次执行以上操作)<br><img src="https://img-blog.csdnimg.cn/2020051718150870.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020051718150868.png" alt="在这里插入图片描述"></p>
<p>输入命令hexo g 生成静态文件，然后输入hexo s 开启本地预览服务，启动hexo博客，端口为4000，浏览器中输入localhost:4000即可打开博客，ctrl + c 关闭<br><img src="https://img-blog.csdnimg.cn/20200517181430293.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200517181430291.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200517181435699.png" alt="在这里插入图片描述"></p>
<p>进入github复制仓库地址，打开_config.yml配置文件，找到deploy相关设置，按如下配置<br><img src="https://img-blog.csdnimg.cn/20200517181305883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdsZV8wMg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200517181238752.png#pic_center" alt="在这里插入图片描述"><br>输入命令hexo d 推送到远端，输入github账号，密码(可提前设置sshkey)部署完成。然后通过你的用户名.github.io访问你的个人博客，此时博客就已经初步搭建好了<br><img src="https://img-blog.csdnimg.cn/20200517181205742.png#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200517181716300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdsZV8wMg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>小米笔记本pro黑苹果</title>
    <url>/2020/04/22/%E5%B0%8F%E7%B1%B3%E7%AC%94%E8%AE%B0%E6%9C%ACpro%E9%BB%91%E8%8B%B9%E6%9E%9C/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>相信很多人都会吐槽和抨击黑苹果，有许多质疑声。只能这么说，小米Pro安装黑苹果系统相对而言——办公、看视频、上网、轻度游戏都是可以完美运作的。当然也是存在一些小缺陷，但并不会影响你的使用和体验。如果你喜欢黑苹果、想要体验苹果系统、希望该文章能帮到你。参考黑果小兵<a href="https://blog.daliansky.net/" target="_blank" rel="noopener">https://blog.daliansky.net/</a></p>
<a id="more"></a>
<h2 id="安装注意事项"><a href="#安装注意事项" class="headerlink" title="安装注意事项"></a>安装注意事项</h2><p>● 笔记本是小米Pro初代（8GB）版本，如果你的Pro和我一样，成功率应该是100%，如果你是最新款Pro，由于固态硬盘升级的关系会出现一些问题，但能解决。</p>
<p>● 我在默认配置硬件的基础上，买了一块256GB的SSD固态硬盘进行扩容，所以该文章是在两块硬盘上分别安装WIN10和苹果最新系统Mojave 10.14.1</p>
<p>● 用两块硬盘安装双系统主要原因是默认原配的256GB SSD容量太小，另外成功率比较高。</p>
<p>● 你可以只装苹果系统不装WIN10，但非常不建议，因为对大多数人而言，微软的Windows系统才是我们最常用、最习惯的，也是保护数据相对安全的系统。</p>
<p>● <strong>目前已知无法解决的问题有</strong></p>
<p>SD卡读卡器无法使用，Wi-Fi不能用，独立显卡不能用（全世界无解），可以通过额外购买USB Wi-Fi解决，至于独立显卡对于办公使用轻度游戏而言，影响并不大，即使在WIN10下，很多时候也是核显在工作，而且买这个价位的小米Pro并不是为了游戏。</p>
<p>● 蓝牙使用存在问题，时好时坏，实在需要可以购买USB 蓝牙</p>
<p>● 触摸板对于普通人使用绝对够用了，支持双指、三指，只是没有原生苹果那么完美，如果你不是苹果笔记本的老司机，一般不会吐槽触摸板。<br>需要的文件地址：</p>
<p>1、 mac镜像：<a href="https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/（可在百度中找到）" target="_blank" rel="noopener">https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/（可在百度中找到）</a></p>
<p>2、 BalenaEtcher软件（百度均能找到，也加入文件中的工具包文件中）</p>
<p>3、 所需要文件: 链接：<a href="https://pan.baidu.com/s/1MloYcFiHG_lqjXyg1r4Fww" target="_blank" rel="noopener">https://pan.baidu.com/s/1MloYcFiHG_lqjXyg1r4Fww</a></p>
<p>提取码：fw6p</p>
<p>下面就开始黑苹果之旅：</p>
<h2 id="打开BalenaEtcher"><a href="#打开BalenaEtcher" class="headerlink" title="打开BalenaEtcher"></a>打开BalenaEtcher</h2><p>1、插入U盘制作启动盘<br><img src="https://img-blog.csdnimg.cn/20200518145106782.png#pic_center" alt="在这里插入图片描述"><br>2、 选择镜像<br><img src="https://img-blog.csdnimg.cn/20200518145123411.png#pic_center" alt="在这里插入图片描述"><br>3、点击flash等待制作<br><img src="https://img-blog.csdnimg.cn/20200518145137733.png#pic_center" alt="在这里插入图片描述"><br>（制作时间较长可以进行第二步）<br><img src="https://img-blog.csdnimg.cn/20200518145152132.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="DiskGenius"><a href="#DiskGenius" class="headerlink" title="DiskGenius"></a>DiskGenius</h2><p>1、 把EFI的BOOT和CLOVER文件拖到主硬盘下的ESP硬盘中EFI文件中（截图中已经是我安装好的，仅需要复制那两个文件就可以）<br><img src="https://img-blog.csdnimg.cn/20200518145216702.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="BOOTICE"><a href="#BOOTICE" class="headerlink" title="BOOTICE"></a>BOOTICE</h2><p>1、选择主硬盘点 分区管理<br><img src="https://img-blog.csdnimg.cn/20200518145227655.png#pic_center" alt="在这里插入图片描述"><br>2、给刚才复制的ESP硬盘分配盘符<br><img src="https://img-blog.csdnimg.cn/20200518145238256.png#pic_center" alt="在这里插入图片描述"><br>3、 关闭分区管理 打开UEFI<br><img src="https://img-blog.csdnimg.cn/20200518145247480.png#pic_center" alt="在这里插入图片描述"><br>打开 修改启动顺序<br><img src="https://img-blog.csdnimg.cn/2020051814525989.png#pic_center" alt="在这里插入图片描述"><br>打开 添加 找到刚才加进去的CLOVER文件中的CLOVERX64.efi<br><img src="https://img-blog.csdnimg.cn/20200518145310284.png#pic_center" alt="在这里插入图片描述"><br>点 保存当前配置<br><img src="https://img-blog.csdnimg.cn/20200518145326606.png#pic_center" alt="在这里插入图片描述"><br>修改菜单标题为CLOVER 点击 保存当前启动配置<br><img src="https://img-blog.csdnimg.cn/202005181453405.png#pic_center" alt="在这里插入图片描述"><br>上移CLOVER 使其为第一个 点击 保存当前启动配置<br><img src="https://img-blog.csdnimg.cn/20200518145349373.png#pic_center" alt="在这里插入图片描述"><br>（现在可以退出重启电脑，U盘不用拔）</p>
<h2 id="设置BIOS"><a href="#设置BIOS" class="headerlink" title="设置BIOS"></a>设置BIOS</h2><p>1、 电脑关机，开机按住F2，选择Security，图中的选中disable，这里的第二选项是为bios设置密码，设不设看你自己了，但是boot mode那里是要设为disable的<br><img src="https://img-blog.csdnimg.cn/20200518145358821.png#pic_center" alt="在这里插入图片描述"><br>2、 boot 设置UEFI<br><img src="https://img-blog.csdnimg.cn/20200518145407703.png#pic_center" alt="在这里插入图片描述"><br>设置好后 F10保存重启</p>
<h2 id="安装Mac-os（这里是10-15-其他版本也一样）"><a href="#安装Mac-os（这里是10-15-其他版本也一样）" class="headerlink" title="安装Mac os（这里是10.15 其他版本也一样）"></a>安装Mac os（这里是10.15 其他版本也一样）</h2><p>1、选择install macos<br><img src="https://img-blog.csdnimg.cn/20200518145418581.png#pic_center" alt="在这里插入图片描述"><br>2、设置磁盘 打开磁盘工具<br><img src="https://img-blog.csdnimg.cn/20200518145429650.png#pic_center" alt="在这里插入图片描述"><br>显示所有设备<br><img src="https://img-blog.csdnimg.cn/20200518145440184.png#pic_center" alt="在这里插入图片描述"><br>将要安装的磁盘抹掉，格式化成nacos 的磁盘格式<br><img src="https://img-blog.csdnimg.cn/20200518145448890.png#pic_center" alt="在这里插入图片描述"><br>3、安装macos 一直点同意<br><img src="https://img-blog.csdnimg.cn/20200518145520790.png#pic_center" alt="在这里插入图片描述"><br>选择刚才抹掉的磁盘安装 macos<br><img src="https://img-blog.csdnimg.cn/20200518145538501.png#pic_center" alt="在这里插入图片描述"><br>（等待安装完成）</p>
<h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><p>无法进入安装界面，需要屏蔽独显卡在Service only ran for 0 seconds. Pushing respawn out by 10 second，这是由于没有屏蔽独显而加载显卡驱动造成的。<br>黑苹果的安装是相当复杂的，很多时候会碰到五国，还需要找寻破解方法，是一个非常困难的过程，但是由于本文章仅仅现定于小米笔记本Pro这款型号，各机型之间区别不大，所以只要一步一步跟着教程走，是不会出现安装失败的情况。至于其他型号的小米笔记本，毕竟都是小米品牌的，硬件有很多相似之处，本教程可能也是适用的，但是没那么多小米笔记本做测试，不能担保，大家谨慎尝试。</p>
]]></content>
      <categories>
        <category>小米</category>
      </categories>
      <tags>
        <tag>黑苹果</tag>
        <tag>小米笔记本</tag>
      </tags>
  </entry>
  <entry>
    <title>F660超级密码获取</title>
    <url>/2020/04/07/F660%E8%B6%85%E7%BA%A7%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96/</url>
    <content><![CDATA[<h2 id="万能密码"><a href="#万能密码" class="headerlink" title="万能密码"></a>万能密码</h2><p>试一下万能密码，用户名 telecomadmin 密码 nE7jA%5m 看是否管用。不过基本都已经在第一次注册的时候通被修改了。</p>
<p>当然你可以先将光猫回复默认，超级密码就会恢复默认。然后再对光猫进行操作，比如修改为桥接模式，使用路由器拨号。</p>
<a id="more"></a>

<h2 id="网页获取"><a href="#网页获取" class="headerlink" title="网页获取"></a>网页获取</h2><p>1、打开浏览器输入<a href="http://192.168.1.1使用光猫背后的一般用户进入，然后再在地址栏打开http://192.168.1.1/web_shell_cmd.gch" target="_blank" rel="noopener">http://192.168.1.1使用光猫背后的一般用户进入，然后再在地址栏打开http://192.168.1.1/web_shell_cmd.gch</a></p>
<p>2、输入 sendcmd 1 DB p UserInfo（如无效用 sendcmd 1 DB p DevAuthInfo 试）</p>
<p>3、在页面中寻找telecomadmin字样就可以找到超级帐号和超级密码了。</p>
<h2 id="使用Telnet获取"><a href="#使用Telnet获取" class="headerlink" title="使用Telnet获取"></a>使用Telnet获取</h2><p>1、开始 – 运行 – cmd ，输入 telnet 并回车（Windows 7 / 2008 默认并不作为组件安装，请到 控制面板 – 打开或关闭Windows功能 中勾选 telnet客户端 ）。</p>
<p>2、回车后输入 root 回车，继续输入 root 回车（注意大小写，如果密码不对可以尝试Zte521）。进入linux的BusyBox的shell界面。</p>
<p>3、然后输入sendcmd 1 DB p UserInfo （如无效用 sendcmd 1 DB p DevAuthInfo 试）</p>
<p>4、就可以看到超级用户名telecomadmin以及超级密码telecomadminXXXXXX了。</p>
<h2 id="修改超级密码"><a href="#修改超级密码" class="headerlink" title="修改超级密码"></a>修改超级密码</h2><p>1、在地址栏打开<a href="http://192.168.1.1/web_shell_cmd.gch" target="_blank" rel="noopener">http://192.168.1.1/web_shell_cmd.gch</a><br>2、输入 sendcmd 1 DB set UserInfo 0 Username admin (注意空格和大小写）解释：修改超级用户为admin<br>3、输入 sendcmd 1 DB set UserInfo 0 Password admin (注意空格和大小写）解释：修改超级密码为admin<br>4、输入 sendcmd 1 DB save (注意空格和大小写）解释：修改保存</p>
<h2 id="突破5用户限止"><a href="#突破5用户限止" class="headerlink" title="突破5用户限止"></a>突破5用户限止</h2><p>1、打开浏览器<a href="http://192.168.1.1/web_shell_cmd.gch" target="_blank" rel="noopener">http://192.168.1.1/web_shell_cmd.gch</a><br>2、输入 sendcmd 1 DB p CltLmt （注意空格和大小写）解释：查看一下当前的用户数量<br>3、输入 sendcmd 1 DB set CltLmt 8 Max 9 （注意空格和大小写）解释：修改最大用户数为9，原来是5，可以改成其他数目，建议最大数目不超过255<br>4、输入 sendcmd 1 DB set CltLmt 8 Enable 0 (注意空格和大小写）解释：去掉限制，部分地区可能有这个检查，为安全起见建议大家将这个值改成0<br>5、输入 sendcmd 1 DB save (注意空格和大小写）解释：修改保存</p>
<h2 id="删除电信远程控制"><a href="#删除电信远程控制" class="headerlink" title="删除电信远程控制"></a>删除电信远程控制</h2><p>1、打开浏览器<a href="http://192.168.1.1/web_shell_cmd.gch" target="_blank" rel="noopener">http://192.168.1.1/web_shell_cmd.gch</a><br>2、输入 sendcmd 1 DB p MgtServer （注意空格和大小写）解释：查看一下当前的电信远程控制<br>3、输入 sendcmd 1 DB set MgtServer 0 URL <a href="http://127.0.0.1" target="_blank" rel="noopener">http://127.0.0.1</a> （注意空格和大小写）解释：简明的方法是把 服务器 URL 改掉<br>4、输入 sendcmd 1 DB set MgtServer 0 Tr069 Enable 0 （注意空格和大小写）解释：禁用TR069远程控制<br>5、输入 sendcmd 1 DB save (注意空格和大小写）解释：修改保存</p>
<h2 id="关闭光猫的自动拨号和路由功能"><a href="#关闭光猫的自动拨号和路由功能" class="headerlink" title="关闭光猫的自动拨号和路由功能"></a>关闭光猫的自动拨号和路由功能</h2><p>1、先将路由器的IP的C段修改一下，只要不是192.168.1.1就行，如192.168.38.1</p>
<p>2、到光猫的DHCP配置，把启动DHCP服务的勾去掉，确定。</p>
<p>3、把INTERNET连接这里全部删掉，在Internet连接，新建一个连接，业务模式选“桥模式”，端口绑定两个都打勾（如有IPTV就只1打勾），DHCP服务不打勾， VLAD ID填1402，其它不动</p>
<p>4、重启光猫，然后就像以前普通猫+路由一样设置了。把路由器的WAN口接到光猫的端口1即可。</p>
<p>5、在路由器的“网络参数”–“WAN设置”，选择“PPPoE”，然后把宽带用户名和密码填上（在电信初次安装的派工单上有），点击“连接”，就应该拨号成功了。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>网络</tag>
        <tag>光猫</tag>
      </tags>
  </entry>
  <entry>
    <title>小米路由器刷入padavan系统</title>
    <url>/2020/02/22/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7%E5%85%A5Padavan%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>小米路由器一台（以Xiaomi 3G为例）。<br>小米路由器开发版ROM。<br>小米路由器开启SSH工具文件。<br>路由器对应的breed文件。<br>路由器对象的Padavan固件文件。<br>一个FAT/FAT32文件格式的U盘。<br>保证操作的电脑和路由器能以有线方式连接。<br>一个小米账号及其密码。<br>补充说明：由于在接下来的操作过程中，需要使用如ssh、scp等linux系统命令，因此对于windows系统的同学来说，推荐大家安装一款名为 Cmder的软件，里面自带了许多常用的linux命令。Cmder也是本文示例所用的工具。</p>
<a id="more"></a>
<h2 id="资源连接"><a href="#资源连接" class="headerlink" title="资源连接"></a>资源连接</h2><p>breed文件下载地址：<a href="https://breed.hackpascal.net/" target="_blank" rel="noopener">https://breed.hackpascal.net/</a><br>Padavan固件下载地址：<a href="http://opt.cn2qq.com/padavan/" target="_blank" rel="noopener">http://opt.cn2qq.com/padavan/</a><br>小米路由器开发版ROM下载地址：<a href="http://miwifi.com/miwifi_download.html" target="_blank" rel="noopener">http://miwifi.com/miwifi_download.html</a><br>小米路由器开启SSH工具文件下载地址：<a href="http://miwifi.com/miwifi_open.html" target="_blank" rel="noopener">http://miwifi.com/miwifi_open.html</a><br>breed官方指导：<a href="http://www.right.com.cn/forum/thread-161906-1-1.html" target="_blank" rel="noopener">http://www.right.com.cn/forum/thread-161906-1-1.html</a><br>Padavan官方指导：<a href="http://www.right.com.cn/forum/thread-161324-1-1.html" target="_blank" rel="noopener">http://www.right.com.cn/forum/thread-161324-1-1.html</a></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>1.当你的电脑接入小米路由器的网络时，访问miwifi.com是路由器的管理页面，此时在该页面底部点进入官网即可来到小米路由器ROM的下载页面。<br>2.刷入breed的好处：Breed是一个路由器的引导程序，可以通过该引导程序便捷的刷入其他系统。<br>3.Padavan不是唯一选择，但是一个可以使用的系统，可以是实现一些改有的功能。<br>4.在跟着本文刷入第三方系统前，请先确保刷入会存在一定的风险，如果在没有备用路由器的情况下，建议慎重。<br>5.在跟着本文刷入第三方系统前，建议先阅读breed和padavan的官方指导。<br>6.<strong>在跟着本文刷入第三方系统前，建议将所有的文件都下载到本地，且确保操作路由器刷入系统的电脑和路由器是有线连接的。</strong><br>7.当你在做好准备且将所需要的文件下载到本地，且仔细阅读如上说明后，方可开始接下来的步骤，因为本教程无法确保每个操作步骤的可逆性。<strong>尤其是说明的第六点，如果你不具备该条件，请立即放弃。</strong></p>
<p><strong>1. 刷入开发版ROM</strong></p>
<p>进入miwifi.com(小米路由器管理页面），在升级系统页面选择手动升级，并选择下载好的开发版ROM即可。<br>路由器会自动完成开发版ROM的升级，等待路由器升级结束并完成重启即可。</p>
<p>说明：到此，你的路由器已经成为开发版本，具备继续折腾的能力。如果这一步对你而言，感觉到有些吃力，建议你放弃接下来的过程，官方的开发版ROM很容易回到正式版ROM，因此该步骤不会影响你路由器的正常使用。</p>
<p><strong>2. 刷入SSH连接工具</strong><br>在小米WIFI的开放页面，点击开启SSH工具，验证你的小米账号后既可以选择对应路由器的开启SSH工具的文件，如miwifi_ssh.bin；并且记住对应的root用户及其密码。<br>将下载的文件放入准备好的U盘的根目录（最外层目录），且保证该U盘文件系统是FAT/FAT32格式。<br>将存有miwifi_ssh.bin文件的U盘插入路由器，并开始如下的操作：<br>将路由器断电。<br>按住reset键，并接入电源。<br>等待路由器黄灯闪烁后，即可松开reset键。<br>等待路由器完成启动。<br>当路由器完成启动后，即可通过ssh协议连接到路由器。<br>如 ssh <a href="mailto:root@192.168.31.1">root@192.168.31.1</a>,如果ssh正常访问，则说明ssh工具已经正确刷入。<br><img src="https://img-blog.csdnimg.cn/20200517150419680.png#pic_center" alt="ssh连接成功"><br>接下来，可以通过cat /proc/mtd命令查看路由器的基本信息，其输出如下（以小小米路由器3G为例）：<br><img src="https://img-blog.csdnimg.cn/20200517150533701.png#pic_center" alt="在这里插入图片描述"><br>说明：到此，你仍然可以选择是否继续接下来的步骤。</p>
<p><strong>3. 备份官方路由器ROM系统文件</strong><br>这里我们是把路由器ROM系统文件备份到U盘当中的，因此你需要准备一个U盘。</p>
<p>将U盘插入到路由器上。<br>通过df -h命令查找U盘的挂载路径:<br><img src="https://img-blog.csdnimg.cn/20200517150606361.png#pic_center" alt="在这里插入图片描述"><br>从df -h的输出可以看到，我插入的U盘被挂载到/extdisks/sda4上。这里可以通过U盘的大小来进行判断。</p>
<p>输入如下命令进行备份（以小米路由器3G为例）：<br>dd if=/dev/mtd0 of=/extdisks/sda4/ALL.bin<br>dd if=/dev/mtd1 of=/extdisks/sda4/Bootloader.bin<br>dd if=/dev/mtd2 of=/extdisks/sda4/Config.bin<br>dd if=/dev/mtd3 of=/extdisks/sda4/Bdata.bin<br>dd if=/dev/mtd4 of=/extdisks/sda4/Factory.bin<br>dd if=/dev/mtd5 of=/extdisks/sda4/crash.bin<br>dd if=/dev/mtd6 of=/extdisks/sda4/crash_syslog.bin<br>dd if=/dev/mtd7 of=/extdisks/sda4/reserved0.bin<br>dd if=/dev/mtd8 of=/extdisks/sda4/kernel0.bin<br>dd if=/dev/mtd9 of=/extdisks/sda4/kernel1.bin<br>dd if=/dev/mtd10 of=/extdisks/sda4/rootfs0.bin<br>dd if=/dev/mtd11 of=/extdisks/sda4/rootfs1.bin<br>dd if=/dev/mtd12 of=/extdisks/sda4/overlay.bin<br>dd if=/dev/mtd13 of=/extdisks/sda4/ubi_rootfs.bin<br>逐个运行如上命令即可。</p>
<p><strong>4. 刷入breed</strong><br>1.将下载好的breed文件通过scp上传到路由器中<br>假设我们将breed文件上传到路由器的/tmp目录下，并保存为breed.bin，则运行如下命令：<br>scp breed_file_path <a href="mailto:root@192.168.31.1">root@192.168.31.1</a>:/tmp/breed.bin<br>简单解释一下，scp后的第一个参数是你从breed官网下载下来的breed文件的完整路径，接下来的一个参数如果你不了解scp的话直接抄即可。<br>比如下面的示例：<br><img src="https://img-blog.csdnimg.cn/20200517150746223.png#pic_center" alt="上传breed文件"><br>注意：scp需要验证root用户的密码。<br>2.验证breed.bin是否上传成功<br>进入到路由器的/tmp文件夹，输出所有文件，查看是否有名为breed.bin的文件存在：<br><img src="https://img-blog.csdnimg.cn/20200517150815221.png#pic_center" alt="在这里插入图片描述"><br>验证breed.bin是否存在</p>
<p>如果成功找到breed.bin这个文件，则说明breed文件准备就绪，我们可以将breed刷入到路由器道中了。</p>
<p>3.写入breed.bin<br>运行mtd -r write /tmp/breed.bin Bootloader命令，等待即可，该命令输出如下：<br><img src="https://img-blog.csdnimg.cn/20200517150839356.png#pic_center" alt="写入breed"><br>当终端输出Rebooting … 5-10s后，将路由器断电重启，等到路由器出现蓝色灯闪烁时，即可进入到breed的管理页面。</p>
<p>4.breed管理页面<br>在浏览器输入192.168.1.1，即可进入breed的管理页面。</p>
<h2 id="刷入Padavan系统"><a href="#刷入Padavan系统" class="headerlink" title="刷入Padavan系统"></a>刷入Padavan系统</h2><p>进入breed管理页面，选择固件更新：<br><img src="https://img-blog.csdnimg.cn/20200517150914797.png#pic_center" alt="breed固件更新述"><br>选择固件，并上传下载好的Padavan固件文件。<br>等待breed完成对Padavan的刷入，然后重启路由器即可。<br>等到路由器重启完成，在浏览器输入192.168.123.1即可进入到Padavan的管理页面，Padavan的默认管理账户是admin:admin。<br><img src="https://img-blog.csdnimg.cn/20200517150947190.png#pic_center" alt="Padavan管理页面"></p>
<p>在Padavan管理页面设置路由器的上网信息和无线网络信息即可。当然Padavan在插件部分还有许多有意思的东西，我想千辛万苦刷入Padavan或OpenWRT的同学，也是为了那个。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>三叶虫-小米路由器3G 刷老毛子 潘多拉Padavan 固件 <a href="http://blog.sina.cn/dpool/blog/s/blog_494f9a6b0102x00h.html?md=gd" target="_blank" rel="noopener">http://blog.sina.cn/dpool/blog/s/blog_494f9a6b0102x00h.html?md=gd</a></p>
]]></content>
      <categories>
        <category>小米</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>路由器</tag>
      </tags>
  </entry>
</search>
